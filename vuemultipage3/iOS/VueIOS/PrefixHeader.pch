//
//  PrefixHeader.pch
//  VueIOS
//
//  Created by sjw on 2020/1/14.
//  Copyright © 2020 sjw. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#import <Availability.h>
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import <QuartzCore/QuartzCore.h>
#import <AVFoundation/AVFoundation.h>

#import <CocoaLumberjack/DDLog.h>
#import <CocoaLumberjack/DDASLLogger.h>
#import <CocoaLumberjack/DDTTYLogger.h>
#import "NSString+Extension.h"
#import "NSString+OTSTO.h"
#import "NSObject+File.h"
#import "UIViewController+CurrentVC.h"

//按设备宽度做适配(iphone6s 宽度未基础)
#define SCALE_WIDTH(x) (([UIScreen mainScreen].bounds.size.width/375.0)*(x))

// 导航栏、状态栏、tab栏高度
#define LXDeviceIsX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPhoneXs
#define IS_IPHONE_Xs ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size): NO)

//判断iPHoneXr
#define SCREENSIZE_IS_XR ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPHoneX、iPHoneXs
#define SCREENSIZE_IS_X ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)
#define SCREENSIZE_IS_XS ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPhoneXs Max
#define SCREENSIZE_IS_XS_MAX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) : NO)

#define LXDevice_NaviBar_Height ((LXDeviceIsX  || IS_IPHONE_Xr|| IS_IPHONE_Xs || IS_IPHONE_Xs_Max) ? 88:64)
#define LXDevice_StatusBar_Height ((LXDeviceIsX  || IS_IPHONE_Xr|| IS_IPHONE_Xs || IS_IPHONE_Xs_Max) ? 44:20)
#define LXDevice_TabBar_Height ((LXDeviceIsX  || IS_IPHONE_Xr|| IS_IPHONE_Xs || IS_IPHONE_Xs_Max) ? 83:49)
#define LXDevice_SafeArea_BottomHeight ((LXDeviceIsX  || IS_IPHONE_Xr|| IS_IPHONE_Xs || IS_IPHONE_Xs_Max) ? 34:0 )

#define kDevice_Is_iPhoneX ([UIScreen mainScreen].bounds.size.height >= 812 ? YES : NO)

//有刘海的手机类型
#define THE_DEVICE_HAVE_HEAD (kDevice_Is_iPhoneX || SCREENSIZE_IS_XR ||SCREENSIZE_IS_X ||SCREENSIZE_IS_XS || SCREENSIZE_IS_XS_MAX)

// 弱引用
#define LXWeakSelf __weak typeof(self) weakSelf = self;
#define LXStrongSelf __strong typeof(weakSelf) strongSelf = weakSelf;

#if defined(DEBUG)

static const DDLogLevel ddLogLevel = DDLogLevelDebug;

#define SWriteLog(...) printf("%s: %s 第%d行: %s\n\n",[[NSString lr_stringDate] UTF8String], [[NSString stringWithFormat:@"%s", __FILE__].lastPathComponent UTF8String] ,__LINE__, [[NSString stringWithFormat:__VA_ARGS__] UTF8String])
#define SRedLog(...) printf("%s: %s 第%d行: %s\n\n",[[NSString lr_stringDate] UTF8String], [[NSString stringWithFormat:@"%s", __FILE__].lastPathComponent UTF8String] ,__LINE__, [[NSString stringWithFormat:__VA_ARGS__] UTF8String])
#define NSLog(...) printf("%s: %s 第%d行: %s\n\n",[[NSString lr_stringDate] UTF8String], [[NSString stringWithFormat:@"%s", __FILE__].lastPathComponent UTF8String] ,__LINE__, [[NSString stringWithFormat:__VA_ARGS__] UTF8String])

//#define SRedLog DDLogError
//#define SWriteLog DDLogWarn
//#define NSLog DDLogInfo
//#define SWriteDebug DDLogDebug

#else

static const DDLogLevel ddLogLevel = DDLogLevelWarning;

#define SRedLog DDLogError
#define SWriteLog DDLogWarn
#define NSLog DDLogInfo
#define SWriteDebug DDLogDebug

#endif


#endif /* PrefixHeader_pch */
